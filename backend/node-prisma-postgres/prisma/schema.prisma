// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  email     String   @unique
  phone     String   @unique
  password  String
  dob       DateTime @default("1989-10-14T10:00:00Z")
  firstName String
  lastName  String
  people    Person[]
  events    Event[]
  tasks     Task[]

  @@map("users")
}

model Person {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt()
  firstName String
  lastName  String
  nickName  String?
  email     String    @unique
  phone     String?   @unique
  dob       DateTime?
  notes     String?
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  events    Event[]

  @@map("people")
}

model Event {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt()
  eventName        String
  eventDescription String
  eventDate        DateTime
  isRecurring      Boolean
  person           Person?  @relation(fields: [personId], references: [id])
  personId         Int?
  user             User     @relation(fields: [userId], references: [id])
  userId           Int

  @@map("events")
}

model Task {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  name     String
  complete Boolean   @default(false)
  date     DateTime? @db.Date()

  user   User @relation(fields: [userId], references: [id])
  userId Int
}
